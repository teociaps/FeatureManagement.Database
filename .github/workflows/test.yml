name: Test

on:
  workflow_run:
    workflows: ["Build"]
    types:
      - completed
  pull_request:
    branches: [dev, main]
    types: [opened, reopened, synchronize, edited, ready_for_review]

env:
  CONFIGURATION: 'Release'
  COSMOSDB_EMULATOR_CERT_PATH: ~/emulatorcert.crt
  AZURE_COSMOS_ENDPOINT: https://localhost:8081

jobs:
  setup_cosmosdb:
    if: ${{ github.event_name == 'pull_request' && (
         contains(github.event.pull_request.changed_files, 'FeatureManagement.Database.Abstractions/') ||
         contains(github.event.pull_request.changed_files, 'FeatureManagement.Database.CosmosDB/') ||
         contains(github.event.pull_request.changed_files, 'FeatureManagement.Database.CosmosDB.Tests/')
       ) }}
    runs-on: ubuntu-latest
    steps:
      - name: Cosmos DB setup
        uses: ./.github/workflows/cosmosdb-setup.yml

  test_with_cosmosdb:
    needs: setup_cosmosdb
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet_version: ['6.0.x', '8.0.x']
        test_type: ['OnlyCosmosDB']

    steps:
      - name: .NET setup
        uses: ./.github/workflows/dotnet-setup.yml
        with:
          dotnet_version: ${{ matrix.dotnet_version }}

      - name: Run tests
        shell: pwsh
        run: ./test.ps1 -Configuration ${{ env.CONFIGURATION }} -TestType ${{ matrix.test_type }}

  test_without_cosmosdb:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet_version: ['6.0.x', '8.0.x']
        test_type: ['NoCosmosDB']

    steps:
      - name: .NET setup
        uses: ./.github/workflows/dotnet-setup.yml
        with:
          dotnet_version: ${{ matrix.dotnet_version }}

      - name: Run tests
        shell: pwsh
        run: ./test.ps1 -Configuration ${{ env.CONFIGURATION }} -TestType ${{ matrix.test_type }}